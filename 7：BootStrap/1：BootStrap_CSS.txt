
BootStrap：是基于 HTML、CSS 和 JavaScript的，用于开发响应式布局、移动设备优先的 WEB 项目

环境安装
	下载 Bootstrap CSS、JavaScript 和字体的预编译的压缩版本，不包含文档和最初的源代码文件
   可以禁止响应式布局


全局样式CSS样式

1：HTML5文档类型：由于BootStrap 使用的某些元素，必须将页面设置为HTML	
	<!DOCTYPE html>
	<html lang="zh-CN">
 	 ...
	</html>


2：移动设备优先：为了确保适当的绘制和触屏缩放，需要在 <head> 之中添加 viewport 元数据标签
     视口（viewport）设置 meta 属性为 user-scalable=no 可以禁用其缩放（zooming）功能，这样禁用缩放功能后，用户只能
     滚动屏幕，就能让你的网站看上去更像原生应用的感觉

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	<meta> 标签可提供有关页面的元信息（meta-information）,位于文档的头部，不包含任何内容
	<meta> 标签的属性定义了与文档相关联的名称/值对


3：布局容器：为页面内容和栅格系统包裹一个 .container 容器，有两个作此用处的类，并且这两种容器类不能互相嵌套
	.container 	 类用于固定宽度并支持响应式布局的容器
	.container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器


4：栅格系统
	随着屏幕或视口（viewport）尺寸的变化，系统会自动分为12列 	  
  特点：
	1：行（row）必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的
	   排列（aligment）和内补（padding）
	2：通过 行（row）在水平方向创建一组 列（column），且内容应当放置于 列（column）内
	3：使用 .col-xs-* （extra small）   .col-sm-* 	  .col-md-* 	.col-lg-*  类来设置宽度


5：排版 
    1：标题
	<h1> 到 <h6> ，另外此标签内还可以设置<small> </small> 标签添加副标题
    2：页面主体
	全局的font-size 设置为14px,line-height 设置为1.428，这些属性直接赋予<body> 的所有元素
        中心内容，通过添加 .lead 类使段落突出显示
    3：内联文本元素
	Marked text: <mark> 突出显示 </mark>
	被删除的文本：<del> </del>
	无用文本：<s> </s>
	插入的文本：<ins> </ins>
	带有下划线的文本：<u></u>
	着重：<strong> </strong>
 		<strong>rendered as bold text</strong>
    4：对齐
	class="text-left" ，text-center，text-right 
    5：改变大小写
	class="text-lowercase"，text-uppercase，text-capitalize （首字母大写）
    6：缩略语
	<abbr title="attribute">attr</abbr>
       首字母缩略语
	<abbr title="HyperText Markup Language" class="initialism">HTML</abbr>
    7：地址
    8：引用
	<blockquote class="blockquote-reverse"> </blockquote> 在其中内容为引用的,class呈现右对齐
	<footer> </footer> 用于标明引用来源
    9：列表
	有序列表，无序列表
	内联列表：所有列表项放在一行
	<ul class="list-inline">
  		<li>...</li>
	</ul>
	带有描述的短语列表：
	<dl>
  		<dt>...</dt>
  		<dd>...</dd>
	</dl>
	水平排列的描述：
	<dl class="dl-horizontal">
  		<dt>...</dt>
  		<dd>...</dd>
	</dl>

6：表格 <table>
   1：条纹状表格
	通过 .table-striped 类可以给表格中每一行增加斑马线样式
		<table class="table table-striped">
  		...
		</table>
   2：带边框表格
	 .table-bordered 类为表格和其中的每个单元格增加边框
   3：鼠标悬停
	 .table-hover 类可以让 表格中的每一行对鼠标悬停状态作出响应。
   4：紧缩表格
	 .table-condensed 类可以让表格更加紧凑，单元格中的内补（padding）均会减半 
   5：状态类可以为行或者单元格设置颜色
	.active 	鼠标悬停在行或单元格上时所设置的颜色
	.success 	标识成功或积极的动作
	.info 	标识普通的提示信息或动作
	.warning 	标识警告或需要用户注意	
	.danger 	标识危险或潜在的带来负面影响的动作.active 	鼠标悬停在行或单元格上时所设置的颜色
   6：响应式表格


7：表单
   1：<lable> </lable> 必须添加此标签，为了更好地排列表单,可以在此标签设置 .sr-only类 将其隐藏
   2：所有设置 .form-control 类 的元素都会默认设置为width：100%;
   3：内联表单
        .form-inline 类使其内容左对齐，并且控件表现为一行
   4：水平排列的表单
        通过添加 .form-horizontal 类，并联合使用Bootstrap预置的栅格类，对齐
   5：支持的控件
        通过将 .checkbox-inline 或 .radio-inline 类应用到一系列的多选框（checkbox）或单选框（radio）控件上，
        可以使这些控件排列在一行
   6：静态控件
        如果需要在表单中将一行纯文本和 label 元素放置于同一行，为 <p> 元素添加 .form-control-static 类即可
   7：禁用状态
        为输入框设置 disabled 属性可以禁止其与用户有任何交互（焦点、输入等)
   8：校验状态
        对表单控件的校验状态，如 error、warning 和 success 状态，都定义了样式。
        使用时，添加 .has-warning、.has-error 或 .has-success 类到这些控件的父元素即可
   9：控件尺寸
	通过 .input-lg 类似的类可以为控件设置高度
   10：调整列（column）尺寸
	用栅格系统中的列（column） col-xs-* 类包裹输入框或其任何父元素，都可很容易的为其设置宽度


8：按钮
   1：可作为按钮使用的标签或元素  <a>、<button> 或 <input>
   2：如果 <a> 链接元素被作为按钮使用 -- 并用于在当前页面触发某些功能 -- 而不是用于链接其他页面或链接当前页面中的其他部分，
      那么，务必为其设置 role="button" 属性
   3：带有预定义样式的按钮
        btn btn-default 类：默认白
  	btn btn-primary 类：首选蓝
	btn btn-success 类：成功绿
	btn btn-info    类：信息蓝
	btn btn-warning 类：警告黄
	btn btn-danger  类：危险红
   4：使用 .btn-lg（大） .btn-sm（小） 或 .btn-xs（超小）类就可以获得不同尺寸的按钮
   5：激活状态
	 <button> 元素，是通过 :active 状态实现的，对于 <a> 元素，是通过 active 类实现的
   6：禁用状态
	<button> 元素添加 disabled 属性，使其表现出禁用状态


9：图片
   1：响应式图片
	通过让 .img-responxive 类让图片支持响应式布局
   2：图片形状
	通过 img-rounded ,img-circle ,img-thumbnail 类分别为图片设置正方形，圆心，带边框的正方形


10：辅助类
   1：文本颜色
	通过 text-primary , text-success ,text-info ,text-warning, text-danger 来设置文本颜色
   2：情景背景颜色
	bg-primary bg-success ,bg-info , bg-warning ,bg-danger 设置背景颜色
   3：快速浮动
	通过 pull-left ,pull-right 类可以让元素向左，向右移动
   4：使内容居中
	通过 center-block 类让内容居中




        
	




