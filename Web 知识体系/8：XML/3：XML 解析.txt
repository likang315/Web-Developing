
 XML解析：在程序中常要对XML增加、修改、删除和检索，这就需要对XML进行解析
   
   目前几乎所有的XML解析器都对两套标准的API提供了支持,即DOM和SAX  
   DOM、SAX只定义了一些接口,以及某些接口的空实现，一个应用程序要想利用DOM或SAX访问XML文档，还要一个实现了DOM或SAX的解析器		
		
   三种解析XML的方式 
	1：DOM
	2：SAX 
	3：DOM4J

   区别：
	DOM解析XML
		在内存中形成DOM对象树
		优点：有相应的方法做增删改查的操作
		缺点：如果文档过大，容易产生内存溢出的问题  
											
	SAX解析XML 
		基于事件驱动，边读边解析，解析的时候调用函数
		优点：不会产生内存溢出问题
		缺点：不能做增删改操作

	DOM4J解析XML 	
		提供了优化过后的DOM对象树，方便做增删改的操作，最好
				
		
1：DOM解析XML ---(Java.xml.parser)
	DocumentBuilderFactory		解析器工厂类的实例
	DocumentBuilder			获取解析器对象
	Document parse(String uri)   	返回一个document对象

 DocumentBuilderFactory (Class)	
	使应用程序能够从 XML 文档获取生成 DOM 对象树的工厂类

	static DocumentBuilderFactory 	newInstance()
		返回DocumentBuilderFactory 实例,有三种搜索引擎方式
	abstract DocumentBuilder 	newDocumentBuilder()
		返回DocumentBuilder 对象
	
 DocumentBuilder(Class)
	使其从 XML 文档获取 DOM 文档实例，可以从 XML 获取一个 Document
	
	Document 	parse(File f)
		解析XML文档
	Document parse(String uri) 
         	解析XML文档



	
2：SAX 解析：SAX是一种基于事件驱动的API
	利用SAX解析XML文档，涉及到两个部分，解析器和事件处理器，解析器负责读取XML文档，并向事件处理器发送事件，
	而事件处理器则负责对事件做出响应，对传递XML数据进行处理

   解析器
	获取解析器的工厂
	获取解析器对象
	解析XML(XML的文件的地址，事件处理器)
	
   事件处理器
	自己编写的类，需要继承DefalutHandler类，重写三个方法。
	startElement()
	characters()
	endElement()
		

3：JDOM解析：是一种面向JAVA的读写和操作XML文档的API
	JDOM和现行的SAX和DOM标准兼容，为JAVA程序员提供了一个简单的、轻量的XML文档操作方法



4：DOM4J
	由dom4j.org出品的一个开源XML解析包，是一个易用的、开源的库，用于XML,应用于Java平台，采用了Java集合框架
	并完全支持DOM，SAX和JAXP


	先下载DOM4J相应的jar包，导入工程中，想要使用DOM4j解析XML文档时，必须使用导入dom4j.jar包才可以读取XML文档。
	把dom4j-1.6.1.jar导入到工程中。
	WEB项目：复制dom4j-1.6.1.jar到	WebRoot -- WEB-INF -- lib
			
			
			
   DOM4J的解析步骤：增，删，改，查
			
	SAXReader(class)
		得到其实实例，然后通过方法read（），得到document对象
	
	创建saxReader对象,来读取文件
     		SAXReader reader = new SAXReader();  
    	通过read方法读取一个文件 转换成Document对象  
      		 Document document = reader.read(new File("src//DOM/book2.xml"));  
			
			





	