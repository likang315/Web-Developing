	
 XML(Extensible Markup Language)
    可扩展的标记语言，被设计成结构化，用来传输和存储数据的（取代数据库的），没有预定义的标签，需要自己定义
    XML 文档形成了一种文档树结构，它从"根部"开始(根节点)，然后扩展到"枝叶"，一切内容都是结点
	
 两者区别;			
   XML  被设计用来传输和存储数据，其焦点是数据的内容
   HTML 被设计用来显示数据，其焦点是数据的外观
			
 XML的版本：
	XML1.0（使用该版本）	
	XML1.1（不向下兼容）
			
 应用
	1:作为配置文件。
	2:可以在系统与系统之间进行数据的传输，存储
		* webserivice	soap	XML封装数据
		* json	 有对象意义的字符串
					
 语法：(形式的良好的XML)
   1:XML版本声明,必须出现在xml文件的第一行和第一列的位置
	写法：<?xml version="1.0"  ?>
	属性：
	   version="1.0"	   XML的版本		（必须写）
	   encoding="UTF-8"	   编码集		（可选的）
	   standalone="yes或者no"  代表xml的文件是否依赖外部文件的（若是no，依赖外部文件）（可选的）
				   不写该属性，默认 no
			
   2:文档类型声明：用来指出定义XML语义所用的DTD
	两种形式：
	   1、DTD在外部文档中      <!DOCTYPE hello SYSTEM “hello.dtd”>   
	   2、在XML中直接给出DTD   <!DOCTYPE hello[
						   <!ELEMENT hello (#PCDATA)>
						  ]>

   3:元素
	1：空元素
	2：带属性的元素
	3：带有内容的元素
	4：带内容和属性的元素
	
    在 XML 中，一些字符拥有特殊的意义，需要使用 5 个预定义的实体引用，否则解析出错
	&lt; 	< 	less than
	&gt; 	> 	greater than
	&amp; 	& 	ampersand
	&apos; 	' 	apostrophe
	&quot; 	" 	quotation mark	

   4:规范			
	不能交叉嵌套	
	只有一个根元素
				
        标签命名规范：
		区分大小写			错误的：<a></A>	代表两个标签
		不能以数字和 - 中划线开头	错误的：<1a>		<-a>
		不能以XML（Xml	XML  xml）开头	错误的：<xmlaa>
		不能包含空格和冒号
	属性
		自定义：命名规范同上。
		在同一个元素上,不能有相同的属性，属性值必须使用单引号或者双引号		
	注释
		和HTML的注释相同，要注意出现特殊情况语句和注释符号重叠
		<!-- XML的注释 -->
				 	
   5:CDATA (character data)，字符数据
      在写XML文档时，有时需要显示字母，数字和其它的符号本身,而在XML中，这些字符已经有特殊的含义，这时就需要用到CDATA
      因为CDATA 区段中的文本数据不会被解析器解析
	语法：
		<![CDATA[	
				内容：当成字符串
			]]>
		
   6: 处理指令PI (Processing Instructions)
	PI允许文档中包含由应用程序来处理的指令，在XML文档中，有可能包含一些非XML格式的数据，这些数据XML处理器无法处理，
	我们就可以通过PI通知其它应用程序来处理这些数据
      格式;
 	    <?xml-stylesheet href="hello.css" type="text/css"?>


   7:行尾处理   
	 XML以文本的方式存在于计算机系统中，以行来分隔，不同的系统采用不同的行分隔,在XML空白字符串中，有两个是标准的
	 ASCII码行尾近控制字串
		回车：CR  #xA
		换行：LF  #xD
	Windows: #xD#xA组合作为分隔符
	UNIX:#xA作为分隔符
	Mac:#xD作为分隔符

   8:命名空间
	避免元素命名冲突的方法
	
    	命名空间是在元素的开始标签的 xmlns 属性中定义的
		
    	语法 xmlns:前缀="URI"     URI(统一资源标识符)












