
 超文本：是一种文档系统，可将文档中的任意位置的信息已其他信息加以关联，即超链接文本
 标记语言：指通过在文档的某部分穿插特别的字符串标签，用来修饰文档的内容

 HTML 构成的文档经过浏览器解析，渲染后，呈现的效果就是Web页面
 HTML5 :在HTML的基础之上添加了一些标签

HTML:超文本标记语言，是为“网页创建和其它可在网页浏览器中看到的信息”设计的一种标记语言。
HTML文档（Web页面）的后缀名
	1：.html
	2：.htm

html标记语言：标记语言是一套标签

html的格式：
	<!DOCTYPE html>     <!--声明为HTML5文档>
	<html>		    <！HTML的根元素>
		<head>
			<!--头部 头名称设置，外部文件引入，编码等属性设置-->
			<title>文档的标题</title>
		</head>
		<body>
			<!--显示部位-->
		</body>
	</html

	
  1：多数标签都是有开始标签和结束标签，其中有个别标签因为只有单一功能，或者没有要修饰的内容可以在标签内结束。
  2：想要对被标签修饰的内容进行更丰富的操作，就用到了标签中的属性，通过对属性值的改变，增加了更多的效果选择。
  3：属性与属性值之间用“=”连接，属性值可以用双引号或单引号或者不用引号，一般都会用双引号。

	

HTML的标签
	
1：排版的标签

 <!-- -->	注释
 <br />		换行标记
 <hr />        一条水平线
		* color:颜色
		* 值的写法：两种	
		1）直接写英文的单词（red green blue）	
		2）RGB三原色(red green blue)	#ab1255
		* width：	宽度
		* 值两种写法：      1）	200px;	
				    2）	可以写百分比
		区别：百分比跟着浏览器的大小而改变，像素值不会。

 <div></div>          区隔标记
 	CSS+DIV在网页进行布局（美工）
	一块区域，会自动换行，区域中放入其他（文字，子标签)

 <span></span>		
	 是内联元素，可用作文本的容器	
	
								
2：段落标签
	<p> </p>
	* 段落标签的开始和结束位置留一空行。
	* align：对齐方式		
	
			
				
3：滚动的字幕
	<marquee scrollamount="60">
		你看见没，我正在滚动.....
	</marquee>
	*behavior：滚动模式
	*dierction: 滚动方向

   字体的类型

	* 粗体
		* <b></b>
	* 斜体	
		* <i></i>	
	* 标签可以嵌套的
		<b><i>文本的内容</i></b>
					

4：标题标签
	* <h1></h1>
	   ...	
	  <h6></h6>	
	
        * 特点：逐渐缩小	 
			


5：图片标签	<img >
	* 属性：
		* src="图片的地址"
		* alt：图片无法显示时，显示预备的文本
		* width="图片的显示宽度"
		* height:图片显示的高度
		* align: 图片旁边字的位置
		* border:图片边框厚度
							
<img src="pulpit.jpg" alt="Pulpit rock" width="304" height="228">



6:超链接标签 <a href="链接的地址" > </a>		

	* href="链接的地址"
	* 如果浏览器可以解析文件，默认会打开文件。
	* 如果浏览器不可以解析文件，弹出下载窗口。
	* 链接最后不带 / 时，会产生两次HTTP请求，系统自动添加

	* 定位资源 id 属性
	   * id="锚点"
	   * 点击   href="#锚点"   返回锚点	
	
			
    一个未访问过的链接显示为蓝色字体并带有下划线。
    访问过的链接显示为紫色并带有下划线。
    点击链接时，链接显示为红色并带有下划线。

 	<a id="tips">有用的提示部分</a>
 	<a href="#tips">访问有用的提示部分</a> 



7：表格标签
   <table>: 一个容器标记，意思是说它用以声明这是表格而且其他表格标记只能在他的范围内才适用，属容器标记的还有其他。 
   <th>: 表头,显示为粗体居中的文本
   <tr>: 用以标示表格行(row）
   <td>: 用以标示表格的每列

   <caption></caption>必须要写在table的中间,用于给表格设置标题

   table的属性

	* border:	边框
	* width:	宽度
	* height:	高度
			
	td和th：都是每一行的存储格(列)

		区别：  th中间的内容粗体显示。
			th中间的内容默认居中。	
			th一般用来表格的表头
					
	td的属性
		* width		宽度
		* height	高度
		合并单元格（值的写法：合并几个单元格，值就写几）
		* 行合并	rowspan=""
		* 列合并	colspan=""
						
	
	<table border="1">
		<caption>用户列表</caption>
		<tr>
			<th>数据</th>
			<th>数据</th>
		</tr>
		<tr>
			<td>数据</td>
			<td>数据</td>
		</tr>
	</table>
			

				
8:有序、无序和定义列表

	* 自定以列表，可嵌套使用，自动对齐，缩进	
		<dl>
			<dt>上层项目</dt>
			    <dd>下层项目</dd>
			    <dd>下层项目</dd>
		</dl>
				
	* 有序列表和无序列表
		* 有序
			<ol>	
				<li>数据的条目</li>
				<li>数据的条目</li>
				<li>数据的条目</li>
			</ol>
					
		* ol的属性
			* type="a"，有数字和字符
			* start="" 从序列几开始	
						
		* 无序（嵌套使用）
			<ul>
				<li>数据条目</li>
				<li>数据条目</li>
				<li>数据条目</li>
			</ul>	
		* ul的属性
			* type=""，实心圆，空心圆，方块体
						

					
9：表单标签  <form> </form>

	* form的属性
		* action="表单的提交路径"   --------数据发送到指定位置
		* action ：用以指明该 CGI 程式的位置，这样此表单所填的资料才能正确传给 CGI 作处理。
		* html页面

			* method="传输方式（默认是get方式）"（面试题）、

				* form表单的提交方式有哪些？（get和post的区别）
					* 答：form表单提交方式有很多，常用的有两种post和get
						* post和get提交方式的区别：
						* get方式会把参数列表显示在地址栏上，post方式不会（请求体）。
						* get方式说明网站安全级别较低，post安全级别较高。
						* get方式不支持大于1K，post支持。
							
				
	* 用户输入的内容

	<input type="类型" name="名称(必须要指定,)" value="是否指定value属性" maxlength="字数限制">
					
	   * placeholder 属性提供可描述输入字段预期值的提示信息，该提示会在输入字段为空时显示，并会在字段获得焦点时消失。

	   * name属性必须要指定,表明此类型的名称，方便传输时的确定，value可以看情况指定  maxlength:字数限制
				
			* type="text"		普通的文本框
				* name必须指定
					
			* type="password"	密码框
				* name必须指定
					
			* type="radio"		单选按钮
				* name必须指定	value必须指定
				* name的属性，值要相同
				* 默认值：checked="checked"或者true
					
			* type="checkbox"	多选按钮
				* name必须指定	value必须指定
				* 默认值：checked
				
			* type="submit" 	提交表单
				* value：设置按钮的名称	
	
			* type="reset"		重置
					
			* type="file"		选择文件		
				* name属性指定

			* type="hidden"		隐藏组件
				* name指定，value指定用来传输指定的ID值
					
			* type="button"		按钮
				* value="显示的文字"
				* 和js联用（javascript）	绑定事件
				
			* type="image"		图片
				* 显示引入外部的一个文件（图片），必须有src属性

			* type="date"           允许你从一个日期选择器选择一个日期（年月日）
			
			* type="number"		用于应该包含数值的输入域。			
				max 	规定允许的最大值
				min 	规定允许的最小值
				maxlength 	规定输入字段的最大字符长度
				size 	规定输入字段中的可见字符数
				step 	规定输入字段的合法数字间隔
				value 	规定输入字段的默认值
				readonly 	规定输入字段的值无法修改
			
			* type="search"		用于搜索域
				


	* <textarea>文本域
		* rows="行数"
		* clos="列数"	
		* name=属性
		* selected="selected"	代表默认值

	* 声明下拉菜单
		<select name="city">
			<option value="bj"> </option>
			<option value="sh"> </option>
		</select>

	     <option>与<option/> 之间的值是浏览器显示在下拉列表中的内容,而value属性中的值是表单被提交时被发送到服务器的值。

	     注释：如果没有指定 value 属性，选项的值将为 <option> 标签中的内容
					
	     size：设置显示下拉菜单的列数，设为 1

			
			

10：框架标签  <iframe src="URL"></iframe> 
	*使用框架，你可以在同一个浏览器窗口中显示不止一个页面

	<iframe> 是用以划分框窗
			
	* height 和 width 属性用来定义iframe标签的高度与宽度,默认像素值
	* frameborder 属性用于定义iframe表示是否显示边框，用数字，1 或 0	
	* src : 代表切割后的窗框的显示链接内容



11：脚本  <script>   </script>

	<script> 标签用于定义客户端脚本，比如 JavaScript。
	<script> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。



12：字符实体
	&nbsp;		空格
	<		&lt;
	>		&gt;
	& 		&amp;	



13：多媒体标签

   音频播放  <audio>  </audio>   
	* 标签之间放置文本内容，这些内容会被显示在不支持次标签的Browser
   属性：
	1：controls  向用户显示音频控件（播放、暂停按钮)
	2：src  音频文件的URL
	3：loop 循环播放次数
	
   视频播放  <video> </video>
	* 标签之间放置文本内容，这些内容会被显示在不支持次标签的Browser
    属性
	1：autoplay  自动播放
	2：controls  向用户显示视频控件（播放、暂停按钮)
	3：height,width  播放器的大小
	4：scr  设置播放器的URL
	
    <source>  为媒体元素（比如 <video> 和 <audio>）定义媒体资源，与上两个标签连用
     属性：
	 1：src  媒体文件的 URL
	 2：type 媒体资源的MIME类型  
         <source src="horse.ogg" type="audio/ogg">

    <object> </object>  用来加载辅助程序（插件），
	 <object height="50" width="100" data="horse.mp3"></object>



14：<Base /> :标签，为此页面所有的URL定义了一个基准URL，都是从基准开始下访问，除非是绝对URL
	href:URL基准
	target:定义了从何处打开链接
		_black:在新窗口中打开链接文档
		_self:在原窗口中打开





